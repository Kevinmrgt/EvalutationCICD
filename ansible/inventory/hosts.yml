# Inventaire Ansible pour l'infrastructure CI/CD Node.js
# Ce fichier peut être généré dynamiquement depuis les outputs Terraform

all:
  children:
    # Groupes par environnement
    development:
      children:
        web_servers_dev:
          hosts:
            # Ces hosts seront générés dynamiquement ou remplis manuellement
            # dev-web-01:
            #   ansible_host: 10.0.1.10
            #   ansible_user: ec2-user
            #   ansible_ssh_private_key_file: ~/.ssh/dev-key.pem
        database_servers_dev:
          hosts:
            # dev-db-01:
            #   ansible_host: 10.0.2.10
            #   ansible_user: ec2-user
            
    staging:
      children:
        web_servers_staging:
          hosts:
            # staging-web-01:
            #   ansible_host: 10.0.1.20
            #   ansible_user: ec2-user
        database_servers_staging:
          hosts:
            # staging-db-01:
            #   ansible_host: 10.0.2.20
            #   ansible_user: ec2-user
            
    production:
      children:
        web_servers_prod:
          hosts:
            # prod-web-01:
            #   ansible_host: 10.0.1.30
            #   ansible_user: ec2-user
            # prod-web-02:
            #   ansible_host: 10.0.1.31
            #   ansible_user: ec2-user
        database_servers_prod:
          hosts:
            # prod-db-01:
            #   ansible_host: 10.0.2.30
            #   ansible_user: ec2-user
    
    # Groupes par fonction
    web_servers:
      children:
        web_servers_dev:
        web_servers_staging:
        web_servers_prod:
      vars:
        app_port: 3000
        app_user: nodejs
        app_dir: /opt/nodejs-app
        node_version: "18"
        pm2_instances: 2
        
    database_servers:
      children:
        database_servers_dev:
        database_servers_staging:
        database_servers_prod:
      vars:
        db_port: 5432
        db_user: postgres
        
    load_balancers:
      hosts:
        # Ces hosts représentent les load balancers AWS ALB
        # Ils ne sont pas directement configurés par Ansible mais peuvent être référencés
        
  # Variables globales
  vars:
    # Configuration SSH
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
    
    # Configuration générale
    project_name: cicd-nodejs
    
    # Configuration Docker
    docker_compose_version: "2.20.0"
    
    # Configuration de monitoring
    monitoring_enabled: true
    
    # Configuration des logs
    log_level: info
    
    # Configuration de sécurité
    firewall_enabled: true
    
    # Configuration de sauvegarde
    backup_enabled: false
    
    # Configuration de la timezone
    timezone: "Europe/Paris" 