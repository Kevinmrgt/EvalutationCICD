---
# Rôle common - Configuration de base pour tous les serveurs
# Ce rôle contient les tâches communes à tous les types de serveurs

- name: '🔧 Configuration de base du système'
  block:
    - name: '📦 Mise à jour du cache des packages'
      yum:
        update_cache: yes
      register: cache_update
      retries: 3
      delay: 5
      until: cache_update is succeeded

    - name: '🔧 Installation des packages essentiels'
      yum:
        name:
          - curl
          - wget
          - git
          - htop
          - vim
          - nano
          - tree
          - unzip
          - zip
          - tar
          - rsync
          - net-tools
          - telnet
          - nc
          - jq
          - yq
          - python3
          - python3-pip
          - chrony
          - logrotate
        state: present
      register: packages_install
      retries: 3
      delay: 5
      until: packages_install is succeeded

    - name: '⏰ Configuration de la timezone'
      timezone:
        name: "{{ timezone | default('UTC') }}"
      notify: restart chronyd

    - name: '🕐 Configuration et démarrage de chronyd'
      service:
        name: chronyd
        state: started
        enabled: yes

    - name: '🔧 Configuration du hostname'
      hostname:
        name: '{{ inventory_hostname }}'
      when: inventory_hostname is defined

    - name: '📝 Mise à jour du fichier /etc/hosts'
      lineinfile:
        path: /etc/hosts
        line: '127.0.0.1 {{ inventory_hostname }}'
        backup: yes
      when: inventory_hostname is defined

- name: '👤 Configuration des utilisateurs et sécurité'
  block:
    - name: "👤 Création de l'utilisateur applicatif"
      user:
        name: "{{ app_user | default('nodejs') }}"
        system: yes
        shell: /bin/bash
        home: "{{ app_dir | default('/opt/nodejs-app') }}"
        create_home: yes
        comment: 'Application User for Node.js'
      register: app_user_created

    - name: "🔑 Configuration des clés SSH pour l'utilisateur applicatif"
      authorized_key:
        user: "{{ app_user | default('nodejs') }}"
        key: '{{ item }}'
        state: present
      loop: '{{ ssh_public_keys | default([]) }}'
      when: ssh_public_keys is defined

    - name: "🔒 Configuration de sudo pour l'utilisateur applicatif"
      lineinfile:
        path: /etc/sudoers.d/{{ app_user | default('nodejs') }}
        line: "{{ app_user | default('nodejs') }} ALL=(ALL) NOPASSWD: /usr/local/bin/deploy-app.sh, /bin/systemctl"
        create: yes
        mode: '0440'
        validate: 'visudo -cf %s'

- name: '🔧 Configuration du système et optimisations'
  block:
    - name: '⚡ Optimisation des limites système'
      pam_limits:
        domain: "{{ app_user | default('nodejs') }}"
        limit_type: '{{ item.type }}'
        limit_item: '{{ item.item }}'
        value: '{{ item.value }}'
      loop:
        - { type: 'soft', item: 'nofile', value: '65536' }
        - { type: 'hard', item: 'nofile', value: '65536' }
        - { type: 'soft', item: 'nproc', value: '32768' }
        - { type: 'hard', item: 'nproc', value: '32768' }

    - name: '🔧 Configuration sysctl pour Node.js'
      sysctl:
        name: '{{ item.name }}'
        value: '{{ item.value }}'
        state: present
        reload: yes
      loop:
        - { name: 'net.core.somaxconn', value: '65535' }
        - { name: 'net.ipv4.tcp_max_syn_backlog', value: '65535' }
        - { name: 'net.ipv4.ip_local_port_range', value: '1024 65535' }
        - { name: 'net.ipv4.tcp_fin_timeout', value: '30' }
        - { name: 'net.ipv4.tcp_keepalive_time', value: '1200' }
        - { name: 'net.ipv4.tcp_tw_reuse', value: '1' }
        - { name: 'vm.swappiness', value: '10' }

- name: '📁 Configuration des répertoires'
  block:
    - name: '📁 Création des répertoires nécessaires'
      file:
        path: '{{ item }}'
        state: directory
        owner: "{{ app_user | default('nodejs') }}"
        group: "{{ app_user | default('nodejs') }}"
        mode: '0755'
      loop:
        - "{{ app_dir | default('/opt/nodejs-app') }}"
        - "{{ app_dir | default('/opt/nodejs-app') }}/logs"
        - "{{ app_dir | default('/opt/nodejs-app') }}/tmp"
        - "{{ app_dir | default('/opt/nodejs-app') }}/backups"
        - "{{ app_dir | default('/opt/nodejs-app') }}/releases"
        - /var/log/nodejs-app

    - name: "📋 Configuration de logrotate pour l'application"
      template:
        src: logrotate.conf.j2
        dest: /etc/logrotate.d/nodejs-app
        mode: '0644'
      vars:
        log_files:
          - "{{ app_dir | default('/opt/nodejs-app') }}/logs/*.log"
          - '/var/log/nodejs-app/*.log'

- name: "🔧 Installation et configuration d'outils de base"
  block:
    - name: '🐍 Installation de pip3'
      yum:
        name: python3-pip
        state: present

    - name: '📦 Installation des packages Python utiles'
      pip:
        name:
          - boto3
          - requests
          - pyyaml
          - jinja2
        executable: pip3

    - name: "🔧 Installation d'AWS CLI"
      pip:
        name: awscli
        executable: pip3
      when: aws_cli_install | default(true) | bool

- name: '📊 Configuration du monitoring de base'
  block:
    - name: '📈 Création des scripts de monitoring'
      template:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
        mode: '0755'
        owner: root
        group: root
      loop:
        - src: system-health.sh.j2
          dest: /usr/local/bin/system-health.sh
        - src: app-health.sh.j2
          dest: /usr/local/bin/app-health.sh

    - name: '⏰ Configuration des tâches cron de monitoring'
      cron:
        name: '{{ item.name }}'
        minute: '{{ item.minute }}'
        hour: "{{ item.hour | default('*') }}"
        job: '{{ item.job }}'
        user: root
      loop:
        - name: 'System Health Check'
          minute: '*/5'
          job: '/usr/local/bin/system-health.sh >> /var/log/system-health.log 2>&1'
        - name: 'Application Health Check'
          minute: '*/2'
          job: '/usr/local/bin/app-health.sh >> /var/log/app-health.log 2>&1'

- name: '🧹 Nettoyage et finalisation'
  block:
    - name: '🗑️ Nettoyage du cache des packages'
      yum:
        autoremove: yes
      when: cleanup_packages | default(true) | bool

    - name: '📝 Enregistrement des informations système'
      template:
        src: system-info.yml.j2
        dest: "{{ app_dir | default('/opt/nodejs-app') }}/system-info.yml"
        mode: '0644'
        owner: "{{ app_user | default('nodejs') }}"
        group: "{{ app_user | default('nodejs') }}"
      vars:
        system_info:
          hostname: '{{ inventory_hostname }}'
          ip_address: '{{ ansible_default_ipv4.address }}'
          os_version: '{{ ansible_distribution }} {{ ansible_distribution_version }}'
          kernel_version: '{{ ansible_kernel }}'
          total_memory: '{{ ansible_memtotal_mb }}MB'
          cpu_count: '{{ ansible_processor_vcpus }}'
          deployment_date: '{{ ansible_date_time.iso8601 }}'

    - name: '✅ Vérification finale de la configuration'
      command: systemctl status chronyd
      register: chronyd_status
      failed_when: false
      changed_when: false

    - name: '📊 Affichage du statut de configuration'
      debug:
        msg:
          - '✅ Configuration de base terminée'
          - "👤 Utilisateur applicatif: {{ app_user | default('nodejs') }}"
          - "📁 Répertoire application: {{ app_dir | default('/opt/nodejs-app') }}"
          - "⏰ Timezone: {{ timezone | default('UTC') }}"
          - "🕐 Chronyd status: {{ 'active' if chronyd_status.rc == 0 else 'inactive' }}"
