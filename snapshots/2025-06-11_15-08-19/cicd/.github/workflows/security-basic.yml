name: 🔒 Basic Security Checks

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

permissions:
  contents: read
  actions: read

env:
  NODE_VERSION: '18'

jobs:
  # ==========================================
  # Job 1: Basic Security Scans
  # ==========================================
  basic-security:
    name: 🔍 Basic Security Analysis
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Run npm audit
        run: |
          echo "🔍 Running npm audit..."
          npm audit --audit-level moderate || echo "⚠️ Vulnerabilities found, but continuing..."
          npm audit --json > npm-audit.json || true

      - name: 🔍 Check for common security issues
        run: |
          echo "🔍 Checking for common security patterns..."

          # Check for hardcoded secrets patterns
          echo "Checking for potential secrets..."
          grep -r -i "password\|secret\|token\|key" --include="*.js" --include="*.json" . || echo "No obvious secrets found"

          # Check for eval usage
          echo "Checking for eval usage..."
          grep -r "eval(" --include="*.js" . && echo "⚠️ eval() usage found" || echo "✅ No eval() usage"

          # Check for console.log in production code
          echo "Checking for console.log..."
          find ./api -name "*.js" -exec grep -l "console\.log" {} \; || echo "✅ No console.log found"

      - name: 📋 Generate Security Report
        run: |
          echo "# 🔒 Basic Security Report" > security-report.md
          echo "" >> security-report.md
          echo "## 📊 Checks Performed" >> security-report.md
          echo "" >> security-report.md
          echo "- ✅ NPM Audit completed" >> security-report.md
          echo "- ✅ Code pattern analysis" >> security-report.md
          echo "" >> security-report.md
          echo "## 📁 Files Checked" >> security-report.md
          echo "" >> security-report.md
          find . -name "*.js" -not -path "./node_modules/*" | head -10 >> security-report.md
          echo "" >> security-report.md
          echo "Generated on: $(date)" >> security-report.md

      - name: 📊 Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: basic-security-report
          path: |
            security-report.md
            npm-audit.json
          if-no-files-found: ignore

  # ==========================================
  # Job 2: Dockerfile Lint
  # ==========================================
  dockerfile-lint:
    name: 🐳 Dockerfile Security Check
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4

      - name: 🔍 Install hadolint
        run: |
          wget -O hadolint https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
          chmod +x hadolint
          sudo mv hadolint /usr/local/bin/

      - name: 🔍 Scan Dockerfile
        run: |
          echo "🔍 Scanning Dockerfile..."
          hadolint Dockerfile || echo "⚠️ Hadolint found issues"

          echo "🔍 Scanning Dockerfile.prod..."
          hadolint Dockerfile.prod || echo "⚠️ Hadolint found issues in Dockerfile.prod"

          echo "🔍 Scanning Dockerfile.dev..."
          hadolint Dockerfile.dev || echo "⚠️ Hadolint found issues in Dockerfile.dev"

      - name: 📋 Generate Dockerfile Report
        run: |
          echo "# 🐳 Dockerfile Security Report" > dockerfile-report.md
          echo "" >> dockerfile-report.md
          echo "## 📊 Files Scanned" >> dockerfile-report.md
          echo "" >> dockerfile-report.md
          echo "- Dockerfile" >> dockerfile-report.md
          echo "- Dockerfile.prod" >> dockerfile-report.md
          echo "- Dockerfile.dev" >> dockerfile-report.md
          echo "" >> dockerfile-report.md
          echo "Generated on: $(date)" >> dockerfile-report.md

      - name: 📊 Upload Dockerfile Report
        uses: actions/upload-artifact@v4
        with:
          name: dockerfile-security-report
          path: dockerfile-report.md
